{"version":3,"sources":["componentes/AgregarCategoria.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AgregarCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","placeholder","getGif","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAmB,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAEhC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbW,SAAEC,GAEnBA,EAAEC,iBAIGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAKlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,QAsBfG,YAAY,sC,+BC7BfC,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DAEF,mCACF,GACD,gCACPC,EALY,UAIL,gCAJK,qBAKeC,UAAWH,GAL1B,kBAGJ,GAHI,oBAEF,oCAFE,SAMCI,MAAOF,GANR,cAMZG,EANY,gBAOKA,EAAKC,OAPV,uBAOVC,EAPU,EAOVA,KAGFC,EAAOD,EAAKE,KAAK,SAACC,GAAS,IAAD,EAC5B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAdxB,kBAkBXM,GAlBW,4CAAH,sDCCNO,EAAc,SAAC,GAAwB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGtC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBACIC,IAAOf,EACPgB,IAAON,IAEX,kCAAMA,EAAN,WCPCO,EAAU,SAAC,GAAqB,IAAlBnB,EAAiB,EAAjBA,UAEvB,ECHwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAlBAC,qBAAW,WAGPxB,EAAQC,GACHwB,MAAM,SAAAC,GAGHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAIGqB,EDvB2BK,CAAc1B,GAAnC2B,EAAb,EAAQpB,KAAea,EAAvB,EAAuBA,QAEvB,OACI,oCACI,mCAAMpB,EAAN,OAECoB,GAAW,qBAAKH,IAAI,sFAAsFC,IAAI,YAE/G,qBAAKF,UAAU,YAAf,SAEQW,EAASlB,KAAK,SAAEC,GAAF,OACV,cAAC,EAAD,eAESA,GADAA,EAAIC,aEgBtBiB,EA7BM,WAEjB,MAAoC3C,mBAAU,CAAC,cAA/C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAOA,OACI,gCACI,8CACA,cAAC,EAAD,CAAkBA,cAAgBA,IAClC,uBAEA,6BAEQS,EAAWgB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEIA,UAAaA,GADNA,Y,MChBnC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4ce6ea21.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AgregarCategoria = ( { setCategorias } ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChance = ( e ) => {\r\n        setInputValue(e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        //Detiene el evento submit del formulario\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        if ( inputValue.trim().length > 2) {\r\n            setCategorias( categorias => [ inputValue, ...categorias] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChance }\r\n                placeholder=\"Agregar una nueva categorÃ­a\"\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n/* Propiedades del componente */\r\n\r\nAgregarCategoria.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired,\r\n}","    //Funcion para obtener los gifs\r\nexport const getGif = async ( categoria ) => {\r\n    // const q = categoria.replace(/ /g, \"+\"); //Reemplaza el espacio por +\r\n    const api_key = 'Z8WgsA7q2nC8orx9x7V8b0V7EJZztbxD';\r\n    const limit = 10;\r\n    const base = 'https://api.giphy.com/v1/gifs';\r\n    const url = `${base}/search?q=${ encodeURI( categoria ) }&limit=${limit}&api_key=${api_key}`;\r\n    const resp = await fetch( url ); //Hacemos la peticion\r\n    const { data } = await resp.json(); //Tranformamos la respuesta a json\r\n    // console.log(data);\r\n\r\n    const gifs = data.map( (img) => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n        \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url} ) => {\r\n\r\n    // console.log(props);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img \r\n                src = {url} \r\n                alt = {title}\r\n            />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ( { categoria } ) => {\r\n\r\n    const { data:imagenes, loading} = useFetchGifs( categoria );\r\n\r\n    return (\r\n        <section>\r\n            <h3> {categoria} </h3>\r\n\r\n            {loading && <img src=\"http://www.gifde.com/gif/otros/decoracion/cargando-loading/cargando-loading-026.gif\" alt=\"loading\"/>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    imagenes.map( ( img ) => \r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            { ...img }\r\n                        /> )\r\n                }\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react/cjs/react.development\"\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    //Ejecuta solo la primera vez que renderiza el hook\r\n    useEffect( ()=>{\r\n\r\n        //Obtenemos los gifs\r\n        getGif( categoria )\r\n            .then( imgs => {\r\n\r\n                //Actualizamos el estado con los gifs obtenidos\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                });\r\n\r\n            });\r\n\r\n    }, [categoria]);\r\n\r\n\r\n\r\n    return state;\r\n}","import React from 'react'\r\nimport { useState } from 'react/cjs/react.development';\r\nimport { AgregarCategoria } from './componentes/AgregarCategoria';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState( ['One Punch'] );\r\n\r\n    // const handleAdd = (categoria) => {\r\n    //     //Agrega una nueva categoria\r\n    //     setCategorias( [...categorias, 'categoria'] );\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AgregarCategoria setCategorias={ setCategorias } />       \r\n            <hr/>\r\n            \r\n            <ol>\r\n                { \r\n                    categorias.map( (categoria) => \r\n                        <GifGrid\r\n                            key = {categoria}\r\n                            categoria = {categoria}\r\n                        />\r\n                    ) \r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}